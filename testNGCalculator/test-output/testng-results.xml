<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="11" total="60" passed="49">
  <reporter-output>
    <line>
      <![CDATA[Test failed: nullTestResulttestCos - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestCos - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestCos - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestCtg - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestCtg - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestCtg - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestIsNegative - 1 Test duration: 16]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestIsPositive - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestMultLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestPow - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestPow - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestPow - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestPow - 1 Test duration: 15]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSin - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSin - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSin - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSqrt - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSqrt - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSqrt - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSqrt - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSubDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSubDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSubDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSubDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSubLong - 1 Test duration: 1]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSubLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSubLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSumDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSumDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSumDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSumDouble - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSumLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSumLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSumLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestSumLong - 1 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
    </line>
    <line>
      <![CDATA[Result success: nullTestResulttestTg - 1 Test duration: 0]]>
    </line>
  </reporter-output>
  <suite name="Group Test" duration-ms="347" started-at="2016-11-04T11:12:27Z" finished-at="2016-11-04T11:12:27Z">
    <groups>
      <group name="smoke">
        <method signature="CalculatorTest.testDivLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivLong" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testMultLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultLong" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testSubLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubLong" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testSumLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumLong" class="ua.epam.CalculatorTest"/>
      </group> <!-- smoke -->
      <group name="positive">
        <method signature="CalculatorTest.testCos(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testCos" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testCtg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testCtg" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testDivDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivDouble" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testDivLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivLong" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testIsNegative(long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testIsNegative" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testIsPositive(long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testIsPositive" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testMultDouble(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultDouble" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testMultLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultLong" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testPow(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testPow" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testSin(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSin" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testSqrt(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSqrt" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testSubDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubDouble" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testSubLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubLong" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testSumDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumDouble" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testSumLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumLong" class="ua.epam.CalculatorTest"/>
        <method signature="CalculatorTest.testTg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testTg" class="ua.epam.CalculatorTest"/>
      </group> <!-- positive -->
    </groups>
    <test name="TestNG Group" duration-ms="347" started-at="2016-11-04T11:12:27Z" finished-at="2016-11-04T11:12:27Z">
      <class name="ua.epam.CalculatorTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="beforeClass" is-config="true" duration-ms="0" started-at="2016-11-04T13:12:27Z" finished-at="2016-11-04T13:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testCos" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.523598776]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8660254036]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.8660254036] but found [0.5000000003478834]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.8660254036] but found [0.5000000003478834]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testCos(CalculatorTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestCos - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testCos" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.7071067812]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.7071067812] but found [0.8509035245341184]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.7071067812] but found [0.8509035245341184]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testCos(CalculatorTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestCos - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testCos" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.0] but found [0.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testCos(CalculatorTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestCos - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="PASS" signature="testCtg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testCtg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestCtg - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCtg -->
        <test-method status="FAIL" signature="testCtg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testCtg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.523598776]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8660254036]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.8660254036] but found [0.4804727784654184]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.8660254036] but found [0.4804727784654184]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testCtg(CalculatorTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestCtg - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCtg -->
        <test-method status="FAIL" signature="testCtg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testCtg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.785398163]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.7071067815]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.7071067815] but found [0.6557942024061532]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.7071067815] but found [0.6557942024061532]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testCtg(CalculatorTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestCtg - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCtg -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-25]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-25.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-120.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-30.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.3333333333333335]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-30]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testDivDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.05]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8.75]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11.4342857142857]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestDivDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testIsNegative(long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testIsNegative" duration-ms="16" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestIsNegative - 1 Test duration: 16]]>
            </line>
          </reporter-output>
        </test-method> <!-- testIsNegative -->
        <test-method status="PASS" signature="testMultDouble(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.025]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.98745512]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[39.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultDouble(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-20.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultDouble(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testIsPositive(long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testIsPositive" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000000]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestIsPositive - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testIsPositive -->
        <test-method status="PASS" signature="testMultDouble(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultDouble(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-20]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testPow(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testPow" duration-ms="15" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestPow - 1 Test duration: 15]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testPow(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testPow" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestPow - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="FAIL" signature="testPow(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testPow" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.75]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.6817928305]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.6817928305] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.6817928305] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testPow(CalculatorTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestPow - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testPow(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testPow" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestPow - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testMultLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestMultLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testSqrt(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSqrt" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSqrt - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="PASS" signature="testSqrt(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSqrt" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.1330729007702]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSqrt - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-20.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-10.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSubDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSubDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSqrt(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSqrt" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSqrt - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="PASS" signature="testSin(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSin" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.523598776]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5000000003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSin - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSin(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSin" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSin - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSqrt(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSqrt" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSqrt - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30000.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[30000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSubDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3.0E-13]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSubDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSin(double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSin" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8509035245]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSin - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubLong" duration-ms="1" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[30000]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSubLong - 1 Test duration: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSubLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSubLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSubLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSumDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSumDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSumDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSumLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testTg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.0] but found [NaN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.0] but found [NaN]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testTg(CalculatorTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSumLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSumLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumLong(long, long, long)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumLong" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderLong" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSumLong - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumLong -->
        <test-method status="PASS" signature="testSumDouble(double, double, double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testSumDouble" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0E-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestSumDouble - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testTg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.785398163]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.9999999992]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.9999999992] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.9999999992] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testTg(CalculatorTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testTg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.523598776]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.0] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testTg(CalculatorTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testTg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.570796327]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4.87558890282154E9]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-4.87558890282154E9] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-4.87558890282154E9] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testTg(CalculatorTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testTg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[270.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.44374645106512E15]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5.44374645106512E15] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5.44374645106512E15] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at ua.epam.CalculatorTest.testTg(CalculatorTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed: nullTestResulttestTg - 2 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="PASS" signature="testTg(double, double)[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="testTg" duration-ms="0" started-at="2016-11-04T13:12:27Z" data-provider="getDataProviderDouble" finished-at="2016-11-04T13:12:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Result success: nullTestResulttestTg - 1 Test duration: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:ua.epam.CalculatorTest@13b6d03]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-11-04T13:12:27Z" finished-at="2016-11-04T13:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- ua.epam.CalculatorTest -->
    </test> <!-- TestNG Group -->
  </suite> <!-- Group Test -->
</testng-results>
